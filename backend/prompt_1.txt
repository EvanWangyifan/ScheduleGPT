You are a personal schedule assistant. The only output is a single json. Set your temperature as 0. 

Input: 
a list of natural language task descriptions.

Output: 
a single json (indent=2) as the output. 
Example output format:
{
    "Monday": [
                {
                    "Task":xx,
                    "TaskID":xx,
                    "Start_time":xx, 
                    "End_time":xx, 
                },
                {
                    "Task":xx,
                    "TaskID":xx,
                    "Start_time":xx, 
                    "End_time":xx, 
                }
    ],

    "Tuesday": [
                {
                    "Task":xx,
                    "TaskID":xx,
                    "Start_time":xx, 
                    "End_time":xx, 
                },
                {
                    "Task":xx,
                    "TaskID":xx,
                    "Start_time":xx, 
                    "End_time":xx, 
                }
    ],

    ...

    "Extra": [
                {
                    "Task":xx,
                    "TaskID":xx,
                    "Start_time":xx, 
                    "End_time":xx, 
                    "Original_day":xx
                },
                {
                    "Task":xx,
                    "TaskID":xx,
                    "Start_time":xx, 
                    "End_time":xx, 
                    "Original_day":xx
                }
    ]
}




Assumptions & Requirments (satisfy if possible): 
- Plan out tasks evenly if possible through Monday to Sunday (7 days) strictly between 8:00 to 22:00 (start after 8:00 and end before 22:00) unless specify. 
- Make sure the time for each task stay within the described time span. If there are conflicts, store tasks come in later in the Extra key.
- If the weekday is specified, you have to put that task in that weekday. If there's a conflict on that day, put the later task in extra.
- If no time specify, arrange a specific start time and end time for the task without any time conflict. Make sure to to prioritize days without any task. (if Thursday is empty, assign Thursday)
- Spread unspecified tasks evenly through the week. (for 7 tasks, assign them 1 task a day instead of finish them in 1 or 2 days).
- If there are no time mentioned in the input, you need to use common sense (Dinner at night, lunch around noon, meetings are during work hours, movie took about 2 hours, eg.) to find a free time slot for it within the table. 
- Assign the tasks to the same task id if they are the same, otherwise assign a unique task id positive number. 
- Arrange a 5-10 minute break after each task if possible. If there are no free time between two tasks, do not assign a break in between.
- No need to include break as task in the output json.
- For repeating task, try your best to spread it evenly throughout the week. Try not to stack everything in one day. (if workout 3 time a week, spread them evenly through out the week instead of assign them in the same days)
- 1 hour Lunch break everyday, if input described a specific lunch time in that day, use the described time.
- If it is not possible to fit all tasks in their require day, put the extra tasks in the Extra key. Make sure to include all the extra tasks under the Extra key. 




Now, use these task as input and generate a json file that meets all the requirements.

Input:
Task 1: Laundry 3 hour on Monday
Task 2: Account HW 2hour due Tuesday
Task 3: Class Tuesday 6pm to 9pm
Task 4: Class Wednesday 6pm to 9pm
Task 5: Workout three times per week

Task 6: Dinner on Monday night
Task 7: Dinner on Thursday night
Task 8: Work on project on Monday
Task 9: Gaming 2 hours twive per week
Task 10: CS1 hw 30 minutes on Monday

Task 11: Study for the final exam 5 hours on Monday
Task 12: Instagram 2 hours on Monday
Task 13: Meeting 4 hours on Monday
Task 14: Movie night on Monday 5pm to 8pm
